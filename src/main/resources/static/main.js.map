{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/docx-form/docx-form.component.ts","./src/app/docx-form/docx-form.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'docxGenerateUI';\n}\n","\n<div>\n    <app-docx-form></app-docx-form>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DocxFormComponent } from './docx-form/docx-form.component';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DocxFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, FormArray, Validators} from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-docx-form',\n  templateUrl: './docx-form.component.html',\n  styleUrls: ['./docx-form.component.css']\n})\nexport class DocxFormComponent implements OnInit {\n    constructor(private fb: FormBuilder, private http: HttpClient) { }\n    docxForm = this.fb.group({\n        reportNumber:[''],\n        commonElementNumber:[''],\n        fileNumber: [''],\n        date: [''],\n        projectAddress:[''],\n        location:[''],\n        referenceDwgs:[''],\n        projectName:[''],\n        builder:[''],\n        weatherCondition:[''],\n        inspectionCategory:[''],\n        datesVisited: this.fb.array([\n            this.fb.control('')\n        ]),\n        inspectionNotes: this.fb.array([\n            this.fb.control('')\n        ])\n    });\n   \n\n  ngOnInit(): void {\n  }\n\n  sendHttpRequest(){\n   this.http.post(\"/docBuild\",this.docxForm.value,{responseType: 'arraybuffer'}).subscribe(response => {\n    this.downLoadFile(response, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\n   })  \n  }\n\n  logIt(){\n    //   console.log(this.datesVisited.value);\n      console.log(this.docxForm.value);\n  }\n\n  private downLoadFile(data: any, type: string){\n    let blob = new Blob([data], { type: type});\n    let url = window.URL.createObjectURL(blob);\n    let pwa = window.open(url);\n    if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\n        alert( 'Please disable your Pop-up blocker and try again.');\n    }\n  }\n\n  get datesVisited() {\n      return this.docxForm.get('datesVisited') as FormArray;\n  }\n\n  addDateVisited() {\n      console.log(\"Why no work\");\n      this.datesVisited.push(this.fb.control(''));\n  }\n\n  get inspectionNotes(){\n      return this.docxForm.get('inspectionNotes') as FormArray;\n  }\n\n  addInspectionNotes(){\n      this.inspectionNotes.push(this.fb.control(''));\n  }\n\n\n}\n","<div>\n    <form [formGroup]='docxForm' class=\"docxFormLayout\">\n        <div class=\"fieldReviewReports\">\n        <label>\n            Field Review Report Number:\n            <input type=\"text\" id=\"fieldReviewReports\" formControlName=\"reportNumber\" tabindex=\"1\">\n        </label>\n    </div>\n    <div class=\"commonElementNumber\">\n        <label>\n            Common Element Number:\n            <input type=\"text\" id=\"commonElementNumber\" formControlName=\"commonElementNumber\" tabindex=\"3\">\n        </label>\n    </div>\n    <div class=\"fileNumber\">\n        <label>\n            File No.:\n            <input type=\"text\" id=\"fileNumber\" formControlName=\"fileNumber\" tabindex=\"4\">\n        </label>\n    </div>\n    <div class=\"date\">    \n        <label>\n            Date of Document: \n            <input type=\"date\" id=\"dateGeneration\" formControlName=\"date\" tabindex=\"6\">\n        </label>\n    </div>\n    <div class=\"projectAddress\">\n        <label>\n            Project Address:\n            <input type=\"text\" id=\"projectAddress\" formControlName=\"projectAddress\" tabindex=\"7\">\n        </label>\n    </div>\n    <div class=\"location\">\n        <label>\n            Location:\n            <input type=\"text\" id=\"location\" formControlName=\"location\" tabindex=\"9\">\n        </label>\n    </div>\n    <div class=\"referenceDwgs\">\n        <label>\n            Reference Dwgs:\n            <input type=\"text\" id=\"referenceDwgs\" formControlName=\"referenceDwgs\" tabindex=\"11\">\n        </label>\n    </div>\n    <div class=\"projectName\">\n        <label>\n            Project Name: \n            <input type=\"text\" id=\"projectName\" formControlName=\"projectName\" tabindex=\"5\"> \n        </label>\n    </div>\n    <div class=\"builder\">\n        <label>\n            Builder: \n            <input type=\"text\" id=\"builder\" formControlName=\"builder\" tabindex=\"2\">\n        </label>\n    </div>\n    <div class=\"weatherCondition\">\n        <label>\n            Weather Condition: \n            <input type=\"text\" id=\"weatherCondition\" formControlName=\"weatherCondition\" tabindex=\"8\">\n        </label>\n    </div>\n    <div class=\"inspectionCategory\">\n        <label>\n            Inspection Category: \n            <input type=\"text\" id=\"inspectionCategory\" formControlName=\"inspectionCategory\" tabindex=\"10\">\n        </label>\n    </div>\n    <div formArrayName=\"datesVisited\" class=\"datesVisited\">\n        \n        <div *ngFor=\"let date of datesVisited.controls; let i = index\">\n            <label>\n                Date Visited: \n                <input type=\"date\" [formControlName]=\"i\">\n            </label>\n        </div>\n        <button (click)=\"addDateVisited()\">Add Date Visited</button>\n    </div>\n    <div formArrayName=\"inspectionNotes\" class=\"inspectionNotes\">\n        <div *ngFor=\"let inspectionNote of inspectionNotes.controls; let i=index\">\n            <label>\n                Inspection Notes: \n                <input type=\"text\" [formControlName]=\"i\">\n            </label>\n        </div>\n        <button (click)=\"addInspectionNotes()\">Add Inspection Note</button>\n    </div>\n    <button (click)=\"sendHttpRequest()\"  class=\"empty5\">SubmitIGuess</button>\n    </form>\n<p>\n    <!-- Value: {{fileNumber.value}} -->\n</p>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}